#pragma checksum "C:\Users\sharm\Desktop\CFP\ASP.NET CORE\ProductManagement\ProductManagement\Views\Product\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "61ed02272819596a97992a1c244c98146de955eae954343f43d4cc83afa995eb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_Index), @"mvc.1.0.view", @"/Views/Product/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\sharm\Desktop\CFP\ASP.NET CORE\ProductManagement\ProductManagement\Views\_ViewImports.cshtml"
using ProductManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\sharm\Desktop\CFP\ASP.NET CORE\ProductManagement\ProductManagement\Views\_ViewImports.cshtml"
using ProductManagement.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"61ed02272819596a97992a1c244c98146de955eae954343f43d4cc83afa995eb", @"/Views/Product/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"0ec3293209163f90764871115becfb32d6d74dc0039376c205fe2ae9e3e5045d", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Product_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-flex align-items-center gap-1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background-color:lightgrey"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\sharm\Desktop\CFP\ASP.NET CORE\ProductManagement\ProductManagement\Views\Product\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("    \r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "61ed02272819596a97992a1c244c98146de955eae954343f43d4cc83afa995eb4590", async() => {
                WriteLiteral("\r\n    <div id=\"mainDiv\" class=\"container\">\r\n        <h2 class=\"tittle\">Product List</h2>\r\n        <a href=\"/Product/AddProduct?Id=0\" class=\"btn btn-dark\"> Create New </a>\r\n        <div class=\"searchBox\">\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "61ed02272819596a97992a1c244c98146de955eae954343f43d4cc83afa995eb5107", async() => {
                    WriteLiteral("\r\n                <input type=\"text\" id=\"searchInput\" class=\"form-control p-3\"placeholder=\"Search anything ...\">\r\n                <button type=\"button\" class=\"btn btn-secondary\"  \r\n                onclick=\"DisplayProduct()\">Search</button>\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>
        <div class=""table-container"">
            <table id=""productTable"" class=""table table-hover table-striped"">
                <thead class=""thead-dark"">
                    <tr>
                        <th> Code
                    <i class=""bi bi-sort-alpha-down ms-2"" role=""button"" onclick=""loListenToUpdate('NAME', 'ASC')""></i>
                    <i class=""bi bi-sort-alpha-up-alt ms-2"" role=""button"" onclick=""loListenToUpdate('NAME', 'DESC')""></i></th>
                        <th scope=""col"">Name</th>
                        <th scope=""col"">Description</th>
                        <th scope=""col"">Expiry Date</th>
                        <th scope=""col"">Category</th>
                        <th scope=""col"">Image</th>
                        <th scope=""col"">Status</th>
                        <th scope=""col"">Creation Date</th>
                        <th scope=""col"">Actions</th>
                    </tr>
                </thead>
                <tbody>
                ");
                WriteLiteral(@"    <!-- Table body will be populated dynamically -->
                </tbody>
            </table>
        </div>

    </div>

    <div class=""control-btn"">

        <button class=""prev-btn"" onclick=""previousPage()"">Previous</button>
        <span id=""pageButtons""></span>
        <button class=""next-btn"" onclick=""nextPage()"">Next</button>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    let productArr = null;
    let currentPage = 1; // Current page number
    const pageSize = 5; // Number of cards to display per page


    function DisplayProduct() {
        const searchInput = document.getElementById('searchInput');
        const keyword = searchInput.value;

        $.ajax({
            url: '/Product/ProductList', // Endpoint URL
            type: 'GET',
            data: { keyword: keyword },
            dataType: 'json',
            success: function (data) {
                console.log(data);
                productArr = data;

                displayCurrentPage();
                displayPageButtons();
            },
            error: function () {
                alert('Data could not be retrieved.');
            }
        });
    }

    function searchInputChanged() {
        DisplayProduct(); // Call DisplayProduct to fetch products based on the new keyword
    }

    

    // Sample product data



    function populateProduc");
            WriteLiteral(@"tTable(products) {
        const tableBody = document.querySelector('#productTable tbody');
        tableBody.innerHTML = ''; 

        products.forEach(product => {
            const row = tableBody.insertRow();
           
            row.innerHTML = `
                    <td>${product.code}</td>
                    <td>${product.name}</td>
                    <td>${product.description}</td>
                    <td>${formatDate(product.expiryDate)}</td>
                    <td>${product.category}</td>
                    <td><img src=""${product.images}"" alt=""Product Image"" /></td>
                    <td>${product.status}</td>
                    <td>${formatDate(product.creationDate)}</td>
                    <td>
                                <a href=""/Product/AddProduct?Id=${product.productID}"" class=""btn btn-primary me-4 btn-sm editButton"">Edit</a> &nbsp|&nbsp
                            <button type=""button"" class=""btn btn-danger btn-sm deleteButton"" onclick=""deleteProduct(${product");
            WriteLiteral(@".productID})"">Delete</button>
                    </td>
                `;
        });
    }

    function displayCurrentPage() {
        const startIndex = (currentPage - 1) * pageSize;
        const endIndex = Math.min(startIndex + pageSize, productArr.length);

        const productsForCurrentPage = productArr.slice(startIndex, endIndex);
        populateProductTable(productsForCurrentPage);
    }


    function previousPage() {
        console.log(""prev"");
        if (currentPage > 1) {
            currentPage--;
            displayCurrentPage();
        }
    }

    function nextPage() {
        console.log(""clicked"");
        const totalPages = Math.ceil(productArr.length / pageSize);
        if (currentPage < totalPages) {
            currentPage++;
            displayCurrentPage();
        }
    }

    function displayPageButtons() {
        const totalPages = Math.ceil(productArr.length / pageSize);
        const pageButtons = document.getElementById('pageButtons');");
            WriteLiteral(@"
        pageButtons.innerHTML = ''; // Clear existing buttons

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.classList.add('page-button');
            button.textContent = i;
            if (i === currentPage) {
                button.classList.add('current'); // Add ""current"" class to the current page button
            }
            button.addEventListener('click', function () {
                currentPage = i;
                displayCurrentPage();
                updatePageButtonStyles();
            });
            pageButtons.appendChild(button);
        }
    }
    function filterTable() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toUpperCase();
        const table = document.getElementById('productTable');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {  // Start from 1 to skip the header ");
            WriteLiteral(@"row
            const cells = rows[i].getElementsByTagName('td');
            let found = false;

            for (let j = 0; j < cells.length; j++) {
                const cell = cells[j];
                if (cell) {
                    const textValue = cell.textContent || cell.innerText;
                    if (textValue.toUpperCase().indexOf(filter) > -1) {
                        found = true;
                        break;
                    }
                }
            }

            if (found) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    }

    function updatePageButtonStyles() {
        const pageButtons = document.querySelectorAll('.page-button');
        pageButtons.forEach(button => {
            button.classList.remove('current');
            if (parseInt(button.textContent) === currentPage) {
                button.classList.add('current');
            }
        });");
            WriteLiteral(@"
    }

    function deleteProduct(productId) {
        if (confirm('Are you sure,You want to delete this product with productid: ' + productId))
            $.ajax({
                url: '/Product/Delete?productId=' + productId,
                success: function () {
                    swal(""Deleted!"", ""Your Product has been deleted."", ""success"");
                    DisplayProduct();
                },
                error: function () {
                    alert('Product cant be deleted!');
                }
            })
    }

    function formatDate(dateString) {
        const date = new Date(dateString);
        const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
        return date.toLocaleDateString(undefined, options);
    }

    


    //document.getElementById('searchInput').addEventListener('input', searchInputChanged);


    DisplayProduct();

</script>




");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
